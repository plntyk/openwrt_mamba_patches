--- linux-3.2.40.orig/net/ipv4/route.c	2013-03-05 19:24:30.000000000 -0800
+++ linux-3.2.40/net/ipv4/route.c	2013-04-13 23:50:18.000000000 -0700
@@ -91,6 +91,7 @@
 #include <linux/rcupdate.h>
 #include <linux/times.h>
 #include <linux/slab.h>
+#include <linux/mv_nfp.h>
 #include <linux/prefetch.h>
 #include <net/dst.h>
 #include <net/net_namespace.h>
@@ -660,6 +661,13 @@
 
 static inline void rt_free(struct rtable *rt)
 {
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	if (rt->nfp)
+		if (nfp_mgr_p->nfp_hook_fib_rule_del)
+			nfp_mgr_p->nfp_hook_fib_rule_del(AF_INET, (u8 *)(&rt->rt_src), (u8*)(&rt->rt_dst),
+						rt->rt_iif, rt->dst.dev->ifindex);
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 	call_rcu_bh(&rt->dst.rcu_head, dst_rcu_free);
 }
 
@@ -691,6 +699,15 @@
 	if (atomic_read(&rth->dst.__refcnt))
 		goto out;
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	if (rth->nfp) {
+		if (nfp_mgr_p->nfp_hook_fib_rule_age)
+			if (nfp_mgr_p->nfp_hook_fib_rule_age(AF_INET, (u8 *)(&rth->rt_src), (u8 *)(&rth->rt_dst),
+						rth->rt_iif, rth->dst.dev->ifindex))
+				rth->dst.lastuse = jiffies;
+	}
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 	age = jiffies - rth->dst.lastuse;
 	if ((age <= tmo1 && !rt_fast_clean(rth)) ||
 	    (age <= tmo2 && rt_valuable(rth)))
@@ -805,6 +822,36 @@
 	}
 }
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+void nfp_fib_sync(void)
+{
+	struct rtable *rt;
+	int h;
+
+	for (h = 0; h <= rt_hash_mask; h++) {
+		if (!rt_hash_table[h].chain)
+			continue;
+
+		rcu_read_lock_bh();
+		for (rt = rcu_dereference_bh(rt_hash_table[h].chain); rt;
+		    rt = rcu_dereference_bh(rt->dst.rt_next)) {
+			if (rt_is_expired(rt))
+				continue;
+
+			rt->nfp = false;
+			if (!(rt->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST | RTCF_LOCAL | RTCF_REJECT))) {
+				if (nfp_mgr_p->nfp_hook_fib_rule_add)
+					if (!nfp_mgr_p->nfp_hook_fib_rule_add(AF_INET, (u8 *)(&rt->rt_src), (u8 *)(&rt->rt_dst),
+					  (u8 *)(&rt->rt_gateway), rt->rt_iif, rt->dst.dev->ifindex))
+					rt->nfp = true;
+			}
+		}
+		rcu_read_unlock_bh();
+	}
+}
+EXPORT_SYMBOL(nfp_fib_sync);
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 /*
  * While freeing expired entries, we compute average chain length
  * and standard deviation, using fixed-point arithmetic.
@@ -2053,6 +2100,10 @@
 	if (!rth)
 		goto e_nobufs;
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	rth->nfp = false;
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 #ifdef CONFIG_IP_ROUTE_CLASSID
 	rth->dst.tclassid = itag;
 #endif
@@ -2216,6 +2267,16 @@
 
 	rt_set_nexthop(rth, NULL, res, res->fi, res->type, itag);
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	rth->nfp = false;
+	if (!(rth->rt_flags & (RTCF_MULTICAST | RTCF_BROADCAST | RTCF_LOCAL | RTCF_REJECT))) {
+		if (nfp_mgr_p->nfp_hook_fib_rule_add)
+			if (!nfp_mgr_p->nfp_hook_fib_rule_add(AF_INET, (u8 *)(&rth->rt_src), (u8 *)(&rth->rt_dst),
+					(u8 *)(&rth->rt_gateway), rth->rt_iif, rth->dst.dev->ifindex))
+				rth->nfp = true;
+	}
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 	*result = rth;
 	err = 0;
  cleanup:
@@ -2270,11 +2331,11 @@
 	struct flowi4	fl4;
 	unsigned	flags = 0;
 	u32		itag = 0;
-	struct rtable * rth;
+	struct rtable  *rth;
 	unsigned	hash;
 	__be32		spec_dst;
 	int		err = -EINVAL;
-	struct net    * net = dev_net(dev);
+	struct net     *net = dev_net(dev);
 
 	/* IP on this device is disabled. */
 
@@ -2367,6 +2428,10 @@
 	if (!rth)
 		goto e_nobufs;
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	rth->nfp = false;
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 	rth->dst.input= ip_local_deliver;
 	rth->dst.output= ip_rt_bug;
 #ifdef CONFIG_IP_ROUTE_CLASSID
@@ -2578,6 +2643,10 @@
 	if (!rth)
 		return ERR_PTR(-ENOBUFS);
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+	rth->nfp = false;
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 	rth->dst.output = ip_output;
 
 	rth->rt_key_dst	= orig_daddr;
@@ -2917,6 +2986,10 @@
 		if (new->dev)
 			dev_hold(new->dev);
 
+#if defined(CONFIG_MV_ETH_NFP_HOOKS)
+		rt->nfp = false;
+#endif /* CONFIG_MV_ETH_NFP_HOOKS */
+
 		rt->rt_key_dst = ort->rt_key_dst;
 		rt->rt_key_src = ort->rt_key_src;
 		rt->rt_key_tos = ort->rt_key_tos;
@@ -3351,9 +3424,9 @@
 
 static struct ctl_table ipv4_skeleton[] =
 {
-	{ .procname = "route", 
+	{ .procname = "route",
 	  .mode = 0555, .child = ipv4_route_table},
-	{ .procname = "neigh", 
+	{ .procname = "neigh",
 	  .mode = 0555, .child = empty},
 	{ }
 };
